#include <stdio.h>

char board[3][3] = {{'1', '2', '3'},
                    {'4', '5', '6'},
                    {'7', '8', '9'}};

int checkWin();
void displayBoard();
void markBoard(int, char);

int main() {
    int player = 1, choice;
    char mark;
    int winner = 0;

    while (1) {
        displayBoard();
        player = (player % 2) ? 1 : 2; // Toggle between player 1 and 2
        printf("Player %d, enter a number (1-9) to mark: ", player);
        scanf("%d", &choice);

        mark = (player == 1) ? 'X' : 'O'; // Player 1 marks 'X', Player 2 marks 'O'

        // Mark the board if the position is valid
        if (choice >= 1 && choice <= 9 && board[(choice-1)/3][(choice-1)%3] != 'X' && board[(choice-1)/3][(choice-1)%3] != 'O') {
            markBoard(choice, mark);
            winner = checkWin();

            if (winner == 1) {
                displayBoard();
                printf("Player %d wins!\n", player);
                break;
            } else if (winner == 0) {
                int emptySpaces = 0;
                for (int i = 0; i < 3; i++)
                    for (int j = 0; j < 3; j++)
                        if (board[i][j] != 'X' && board[i][j] != 'O')
                            emptySpaces++;
                if (emptySpaces == 0) {
                    displayBoard();
                    printf("It's a draw!\n");
                    break;
                }
            }
        } else {
            printf("Invalid move. Try again.\n");
        }

        player++;
    }

    return 0;
}

// Function to display the board
void displayBoard() {
    printf("\n");
    for (int i = 0; i < 3; i++) {
        printf(" %c | %c | %c \n", board[i][0], board[i][1], board[i][2]);
        if (i < 2) {
            printf("---|---|---\n");
        }
    }
    printf("\n");
}

// Function to mark a spot on the board
void markBoard(int choice, char mark) {
    board[(choice-1)/3][(choice-1)%3] = mark;
}

// Function to check for a winner
int checkWin() {
    // Check rows, columns, and diagonals
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
            return 1;
        }
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i]) {
            return 1;
        }
    }
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
        return 1;
    }
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
        return 1;
    }
    return 0;
}